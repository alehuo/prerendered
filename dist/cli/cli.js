#!/usr/bin/env node
(function e(r,t){if(typeof exports==="object"&&typeof module==="object")module.exports=t();else if(typeof define==="function"&&define.amd)define("prerendered_cli",[],t);else if(typeof exports==="object")exports["prerendered_cli"]=t();else r["prerendered_cli"]=t()})(this,(function(){return function(e){var r={};function t(o){if(r[o]){return r[o].exports}var n=r[o]={i:o,l:false,exports:{}};e[o].call(n.exports,n,n.exports,t);n.l=true;return n.exports}t.m=e;t.c=r;t.d=function(e,r,o){if(!t.o(e,r)){Object.defineProperty(e,r,{enumerable:true,get:o})}};t.r=function(e){if(typeof Symbol!=="undefined"&&Symbol.toStringTag){Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}Object.defineProperty(e,"__esModule",{value:true})};t.t=function(e,r){if(r&1)e=t(e);if(r&8)return e;if(r&4&&typeof e==="object"&&e&&e.__esModule)return e;var o=Object.create(null);t.r(o);Object.defineProperty(o,"default",{enumerable:true,value:e});if(r&2&&typeof e!="string")for(var n in e)t.d(o,n,function(r){return e[r]}.bind(null,n));return o};t.n=function(e){var r=e&&e.__esModule?function r(){return e["default"]}:function r(){return e};t.d(r,"a",r);return r};t.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)};t.p="";return t(t.s=1)}([function(e,r){e.exports=require("path")},function(e,r,t){"use strict";var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(r,"__esModule",{value:true});var n=o(t(2));var i=o(t(0));var s=o(t(3));var u=o(t(4));var d=t(5);var l=t(6);d.program.version("0.0.1");console.log("Prerendered CLI");d.program.option("--debug, -d","Enable debug printing");d.program.command("init").description("Initialize prerendered").action((function(e,r){if(n.default.existsSync(i.default.join(process.cwd(),"prerendered.json"))){throw new Error("Error! prerendered.json already exists. Please delete it before proceeding.")}console.log("Thank you for using prerendered. I will now ask a few questions about your app.");console.log("A configuration file will be created to the project root which is used by the build command.");console.log("The folder I will use as a base will be "+process.cwd());var t=[{type:"input",name:"entrypoint",message:"What is your client entrypoint? (Current working dir: "+process.cwd()+")"}];s.default.prompt(t).then((function(e){if(e.entrypoint===""){throw new Error("Error! No entrypoint given")}if(!n.default.existsSync(i.default.join(process.cwd(),e.entrypoint))){throw new Error("Error! Entrypoint does not exidst")}var r={client:{entryPoint:e.entrypoint}};n.default.writeFileSync(i.default.join(process.cwd(),"prerendered.json"),JSON.stringify(r,null,2));console.log("Created prerendered.json")}))}));d.program.command("build").description("Build prerendered").action((function(e,r){if(!n.default.existsSync(i.default.join(process.cwd(),"prerendered.json"))){throw new Error("Error! prerendered.json not found. Please run `prerendered init`")}var t=JSON.parse(n.default.readFileSync(i.default.join(process.cwd(),"prerendered.json")).toString("utf-8"));var o=l.createConfig(t.client.entryPoint);u.default(o,(function(e,r){if(e||r.hasErrors()){throw new Error(e.message)}console.log("Done!")}))}));d.program.parse(process.argv)},function(e,r){e.exports=require("fs")},function(e,r){e.exports=require("inquirer")},function(e,r){e.exports=require("webpack")},function(e,r){e.exports=require("commander")},function(e,r,t){"use strict";(function(e){var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(r,"__esModule",{value:true});r.createConfig=void 0;var n=t(0);var i=o(t(7));r.createConfig=function(r){return{mode:"production",entry:n.resolve(process.cwd(),r),output:{path:n.resolve(process.cwd(),".prerendered"),filename:"[name].js"},module:{rules:[{test:/\.tsx?$/,exclude:[/node_modules/],include:[n.resolve(process.cwd(),n.dirname(r))],loader:"ts-loader",options:{configFile:n.resolve(e,"tsconfig.prr.json")}}]},resolve:{extensions:[".js",".jsx",".ts",".tsx"]},devtool:"source-map",target:"web",optimization:{minimize:true,minimizer:[new i.default({parallel:true,terserOptions:{compress:false,ecma:6,mangle:true},sourceMap:true,test:/\.js(\?.*)?$/i})]}}}}).call(this,"/")},function(e,r){e.exports=require("terser-webpack-plugin")}])}));
//# sourceMappingURL=cli.js.map